flask run --help
    for help command in flask
    

comments on api endpoints
order(get)
# # if get, then assign an array. list of orders will be filtered by the username only if book_id parameter is 0(no book specified).
        # # else it is also filtered by the book id and returned.
        # order_display = []
        # for orders in orders_list:
        #     if orders['username'] == request.form['username']:
        #         if int(request.form['book_id']) == 0:
        #             order_display.append(orders)
        #         elif int(request.form['book_id']) == orders['book_id']:
        #             order_display.append(orders['status'])
        # return jsonify(order_display)

order(post)
 # # for post, if the id is in the filtered array of book list ids, add the order details
        # # to the orders_list array and return. else, the book is not in the library.
        # id=int(request.form['book_id'])
        # id_array = []
        # for book in books_list:
        #     id_array.append(book['id'])
            
        # if id in id_array:
        #     username = request.form['username']
        #     book_id =int(request.form['book_id'])
        #     order = {
        #         'username': username,
        #         'book_id': book_id,
        #         'status': 'ordered',
        #         'order_id': orders_list[-1]['order_id']+1
        #     }
            
        #     orders_list.append(order)
        #     return jsonify(orders_list)
        # else:
        #     return "Book is not in our library"

book/id(get)
# # get all documents in collection, returns a cursor
        # cursor = conn.find({ })
        # # print("cursor is", cursor.next())
        # conn_count = int(conn.count_documents({}) ) #lenght of the collection
        # # loop over conn_count while pressing next on the cursor.
        # # when the cursor is same as given id, the doc value will be the doc at that id
        # # potential synchronicity issues in this, to be fixed later 
        # for book_num in range(conn_count):
        #     doc = cursor.next()
        #     if book_num == id:
        #         return f'{doc}'
        #     pass